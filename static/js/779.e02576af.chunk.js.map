{"version":3,"file":"static/js/779.e02576af.chunk.js","mappings":"sOAEaA,E,OAAcC,EAAAA,GAAH,0G,SCIT,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAf,GACrC,GAAE,CAACR,KAGA,8BACwB,IAAnBG,EAAQM,QACL,uEAEA,SAACZ,EAAD,UACKM,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACI,2BACI,qCAAaD,MACb,uBAAIC,MAFCF,EAKhB,OAKpB,C,+LC9BKG,EAAU,mCACVC,EAAQ,gEAA4DD,GAInE,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,+GAEkBC,EAAAA,EAAAA,IAAUF,GAF5B,cAECG,EAFD,OAGCC,EAASD,EAASV,KAAKY,QAHxB,SAIQD,EAJR,0EAMLE,QAAQC,IAAR,MANK,iFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,kFACAa,EADA,6CACmDb,EADnD,oBACiEG,EADjE,qCAGkBG,EAAAA,EAAAA,IAAUO,GAH5B,cAGCN,EAHD,OAICO,EAAQP,EAASV,KAJlB,kBAKEiB,GALF,gCAOLJ,QAAQC,IAAR,MAPK,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bf,GAA/B,kFACAgB,EADA,6CACmDhB,EADnD,4BACyEG,EADzE,qCAGkBG,EAAAA,EAAAA,IAAUU,GAH5B,cAGCT,EAHD,OAICU,EAAOV,EAASV,KAAKoB,KAJtB,kBAKEA,GALF,gCAOLP,QAAQC,IAAR,MAPK,gFAWA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BK,GAA/B,kFACAkB,EADA,6CACmDlB,EADnD,4BACyEG,EADzE,4CAGkBG,EAAAA,EAAAA,IAAUY,GAH5B,cAGCX,EAHD,OAICf,EAAUe,EAASV,KAAKY,QAJzB,kBAKEjB,GALF,gCAOLkB,QAAQC,IAAR,MAPK,gFAWA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACAC,EADA,0DAC+DD,EAD/D,oBACgFjB,EADhF,gEAGkBG,EAAAA,EAAAA,IAAUe,GAH5B,cAGCd,EAHD,OAICC,EAASD,EAASV,KAAKY,QAJxB,kBAKED,GALF,gCAOLE,QAAQC,IAAR,MAPK,gF","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewsList = styled.ul`\n\tli{\n\t\tmargin-bottom: 20px;\n\t\th4{\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\t}\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/movieAPI';\nimport { ReviewsList } from './Reviews.styled';\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getMovieReviews(movieId).then(data => setReviews(data));\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews.length === 0 ? (\n                <div>We don`t have any reviews for this movie</div>\n            ) : (\n                <ReviewsList>\n                    {reviews.map(({ id, author, content }) => {\n                        return (\n                            <li key={id}>\n                                <h4>Author: {author}</h4>\n                                <p>{content}</p>\n                            </li>\n                        );\n                    })}\n                </ReviewsList>\n            )}\n        </>\n    );\n}\n","import axios from 'axios';\n\nconst API_KEY = '6ee8f442105c5771b43e4ffd32101863';\nconst urlTrend = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n\n\n\nexport async function getTrendingMovies() {\n\ttry {\n\t\tconst response = await axios.get(urlTrend);\n\t\tconst movies = response.data.results;\n\t\treturn await movies;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\t\n}\n\nexport async function getMovieDetails(id) {\n\tconst urlDetails = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n\ttry {\n\t\tconst response = await axios.get(urlDetails);\n\t\tconst movie = response.data;\n\t\treturn movie;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport async function getMovieCredits(id) {\n\tconst urlCredits = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n\ttry {\n\t\tconst response = await axios.get(urlCredits);\n\t\tconst cast = response.data.cast;\n\t\treturn cast;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport async function getMovieReviews(id) {\n\tconst urlReviews = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n\ttry {\n\t\tconst response = await axios.get(urlReviews);\n\t\tconst reviews = response.data.results;\n\t\treturn reviews;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport async function getSearchMovie(query) {\n\tconst urlSearch = `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n\ttry {\n\t\tconst response = await axios.get(urlSearch);\n\t\tconst movies = response.data.results;\n\t\treturn movies;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}"],"names":["ReviewsList","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","data","length","map","id","author","content","API_KEY","urlTrend","getTrendingMovies","axios","response","movies","results","console","log","getMovieDetails","urlDetails","movie","getMovieCredits","urlCredits","cast","urlReviews","getSearchMovie","query","urlSearch"],"sourceRoot":""}